version: "3.9"

services:
  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - ${MYSQL_HOST_PORT}:3306
    networks:
      - app-network

  redis:
    image: redis:7.0.5-alpine3.16
    restart: unless-stopped
    ports:
      - ${REDIS_HOST_PORT}:6379
    volumes:
      - redis-data:/data
    networks:
      - app-network

  nginx:
    build:
      context: ./docker
      dockerfile: ./nginx/Dockerfile
    ports:
      - ${NGINX_HOST_PORT}:80
    depends_on:
      - api
    volumes:
      - ${PWD}/api/.:/app
    networks:
      - app-network

  api:
    build:
      context: ./docker
      dockerfile: ./api/Dockerfile
      args:
        DOCKER_UID: ${DOCKER_UID:-0}
        DOCKER_GID: ${DOCKER_GID:-0}
        APP_ENV: ${APP_ENV:-local}
    depends_on:
      - mysql
    tty: true
    stdin_open: true
    restart: always
    volumes:
      - ${PWD}/api/.:/app
    command: sh /docker-entrypoint.sh
    networks:
      - app-network

  client:
    build:
      context: ./docker
      dockerfile: ./client/Dockerfile
      args:
        APP_ENV: ${APP_ENV:-local}
    tty: true # docker run -t
    stdin_open: true # docker run -i
    restart: always
    ports:
      - ${CLIENT_HOST_PORT}:3000
    volumes:
      - ${PWD}/client/.:/app
    environment:
      NUXT_HOST: 0.0.0.0
    command: sh /docker-entrypoint.sh
    networks:
      - app-network

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local

networks:
  app-network:
    driver: bridge
